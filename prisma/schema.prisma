// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  name        String
  password    String
  userAnimals userAnimals[]
}

model Animals {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  activeTime  String
  lenghtMin   Int
  lenghtMax   Int
  weightMin   Int
  weightMax   Int
  lifespan    Int
  geoRange    String
  imageLink   String
  userAnimals userAnimals[]
  Diet        Diet[]
  animalType  animalType[]
  habitatType habitatType[]
}

model Diet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  diet      String   @db.VarChar(255)
  animals   Animals  @relation(fields: [animalId], references: [id])
  animalId  Int
}

model animalType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      String   @db.VarChar(255)
  animals   Animals  @relation(fields: [animalId], references: [id])
  animalId  Int
}

model habitatType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  habitat   String   @db.VarChar(255)
  animals   Animals  @relation(fields: [animalId], references: [id])
  animalId  Int
}

model userAnimals {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  aninals   Animals  @relation(fields: [animalId], references: [id])
  animalId  Int

  @@id([userId, animalId])
}
